// -alpha_dither yes -dither 2 -non_opaque_image_format ARGB8888 -opaque_image_format RGB888 0xd05da1a1
// Generated by imageconverter. Please, do not edit!

#include <touchgfx/Bitmap.hpp>
#include <BitmapDatabase.hpp>

#ifndef NO_USING_NAMESPACE_TOUCHGFX
using namespace touchgfx;
#endif

extern const unsigned char _bg[];
extern const unsigned char _black_arrow[];
extern const unsigned char _black_arrow_up[];
extern const unsigned char _blue_buttons_round_edge_icon_button[];
extern const unsigned char _blue_buttons_round_edge_icon_button_pressed[];
extern const unsigned char _blue_icons_document_32[];
extern const unsigned char _blue_icons_home_32[];
extern const unsigned char _blue_icons_refresh_32[];
extern const unsigned char _blue_icons_settings_32[];
extern const unsigned char _blue_icons_tools_32[];
extern const unsigned char _btn_long[];
extern const unsigned char _btn_long_pressed[];
extern const unsigned char _counter_box[];
extern const unsigned char _orange_arrow[];
extern const unsigned char _orange_arrow_up[];
extern const unsigned char _small_btn[];
extern const unsigned char _small_btn_disable[];
extern const unsigned char _small_btn_pressed[];

const touchgfx::Bitmap::BitmapData bitmap_database[] =
{
    { _bg, 0, 480, 272, 0, 0, 480, 272, touchgfx::Bitmap::RGB888 },
    { _black_arrow, 0, 30, 17, 11, 10, 8, 4, touchgfx::Bitmap::ARGB8888 },
    { _black_arrow_up, 0, 30, 17, 11, 3, 8, 4, touchgfx::Bitmap::ARGB8888 },
    { _blue_buttons_round_edge_icon_button, 0, 60, 60, 7, 6, 46, 46, touchgfx::Bitmap::ARGB8888 },
    { _blue_buttons_round_edge_icon_button_pressed, 0, 60, 60, 7, 6, 46, 46, touchgfx::Bitmap::ARGB8888 },
    { _blue_icons_document_32, 0, 27, 30, 0, 2, 3, 26, touchgfx::Bitmap::ARGB8888 },
    { _blue_icons_home_32, 0, 30, 29, 23, 9, 3, 20, touchgfx::Bitmap::ARGB8888 },
    { _blue_icons_refresh_32, 0, 30, 28, 24, 7, 5, 5, touchgfx::Bitmap::ARGB8888 },
    { _blue_icons_settings_32, 0, 30, 30, 28, 12, 1, 6, touchgfx::Bitmap::ARGB8888 },
    { _blue_icons_tools_32, 0, 30, 28, 6, 5, 4, 6, touchgfx::Bitmap::ARGB8888 },
    { _btn_long, 0, 200, 56, 3, 0, 194, 55, touchgfx::Bitmap::ARGB8888 },
    { _btn_long_pressed, 0, 200, 56, 3, 0, 194, 55, touchgfx::Bitmap::ARGB8888 },
    { _counter_box, 0, 152, 154, 0, 0, 152, 154, touchgfx::Bitmap::RGB888 },
    { _orange_arrow, 0, 30, 17, 11, 10, 8, 4, touchgfx::Bitmap::ARGB8888 },
    { _orange_arrow_up, 0, 30, 17, 11, 3, 8, 4, touchgfx::Bitmap::ARGB8888 },
    { _small_btn, 0, 100, 56, 3, 0, 95, 55, touchgfx::Bitmap::ARGB8888 },
    { _small_btn_disable, 0, 100, 56, 3, 0, 94, 55, touchgfx::Bitmap::ARGB8888 },
    { _small_btn_pressed, 0, 100, 56, 3, 0, 94, 55, touchgfx::Bitmap::ARGB8888 }
};

namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
    return bitmap_database;
}
uint16_t getInstanceSize()
{
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
}
}

